---
- name: Ansible update-alternatives
  block:

    - name: Include check tasks
      ansible.builtin.include_tasks: check.yml

    - name: Record the current state of the ansible_local.alternatives if defined
      block:

        - name: Set a variable for the existing ansible_local.alternatives is defined
          ansible.builtin.set_fact:
            alternatives_previous_facts: "{{ ansible_local.update_alternatives }}"

        - name: Debug the current ansible_local.update_alternatives facts
          ansible.builtin.debug:
            var: ansible_local.update_alternatives
            verbosity: 2

      when: ( ansible_local.update_alternatives is defined ) and ( ansible_local.update_alternatives != [] )

    - name: Include local facts tasks
      ansible.builtin.include_tasks: local_facts.yml
      when: alternative_facts

    - name: Update alternatives
      block:

        - name: Include update tasks for alternatives that need updating
          ansible.builtin.include_tasks: update.yml
          when: alt_update != ansible_local.update_alternatives.selections[alt_update.name]
          loop: "{{ alternatives_update }}"
          loop_control:
            loop_var: alt_update
            label: "{{ alt_update }}"

      when: ( alternatives_update is defined ) and ( alternatives_update != [] )

    - name: Reload ansible_local.alternatives facts
      ansible.builtin.meta: flush_handlers

    - name: Debug the updated ansible_local.alternatives facts when they have changed
      ansible.builtin.debug:
        var: ansible_local.update_alternatives
        verbosity: 2
      when:
        - alternatives_previous_facts is defined
        - ansible_local.update_alternatives != alternatives_previous_facts

  when: alternatives
  tags:
    - alternatives
...
