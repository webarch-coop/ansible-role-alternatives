---
- name: Checks for present alternative
  block:

    - name: Debug alternative
      ansible.builtin.debug:
        var: alt
        verbosity: 2

    - name: Check alternative name
      ansible.builtin.assert:
        that:
          - alt.alternative is defined
          - alt.alternative | type_debug is regex('AnsibleUnicode|AnsibleUnsafeText|str')
        quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"

    - name: Check alternative state
      ansible.builtin.assert:
        that:
          - alt.state is regex('^present|absent$')
        quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"
      when: alt.state is defined

    - name: Check alternative link
      ansible.builtin.include_tasks: check_path.yml
      vars:
        path: "{{ alt.alternative }}"
      when: ( alt.state is not defined ) or ( alt.state == "present" )

    - name: Check alternative priority
      ansible.builtin.assert:
        that:
          - alt.priority | type_debug == "int"
          - alt.priority is regex('^[-]?[0-9]{1,4}$')
        quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"

    - name: Check alternative slaves
      block:

        - name: Check that alternative slaves is a array
          ansible.builtin.assert:
            that:
              - alt.slaves | type_debug == "list"
            quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"

        - name: Include checks for alternative slaves when present
          ansible.builtin.include_tasks: check_slave.yml
          loop: "{{ alt.slaves }}"
          loop_control:
            loop_var: slave
            label: "{{ slave.name }}"
          when: alt.slaves != []

      when: alt.slaves is defined

  tags:
    - alternatives
...
