# Copyright 2022-2025 Chris Croome
#
# This file is part of the Webarchitects Debian alternatives Ansible role.
#
# The Webarchitects Debian alternatives Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Debian alternatives Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Debian alternatives Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Ansible alternatives local facts
  block:

    - name: Required packages present
      ansible.builtin.apt:
        pkg:
          - jo
          - jc
        state: present

    - name: Check jc
      ansible.builtin.command: jc -a
      check_mode: false
      changed_when: false
      register: jc_a

    - name: Set a fact for the jc information
      ansible.builtin.set_fact:
        alternatives_jc: "{{ jc_a.stdout | from_json }}"

    - name: Debug the jc details
      ansible.builtin.debug:
        var: alternatives_jc
        verbosity: 3

    - name: The version of jc needs to be 1.18.8 or greater
      ansible.builtin.assert:
        that:
          - alternatives_jc.version | string is version('1.18.8', '>=')
        quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"

    - name: Include tasks to generate alternatives present and alternatives absent tasks
      ansible.builtin.include_tasks: alternatives.yml
      when: ( alternatives_update is defined ) and ( alternatives_update != {} )

    - name: Alternatives present in facts config file
      ansible.builtin.lineinfile:
        path: /etc/ansible/alternatives
        line: "{{ alt }}"
        state: present
        create: true
        mode: "0600"
        owner: root
        group: root
      loop: "{{ alternatives_present }}"
      loop_control:
        loop_var: alt
        label: "{{ alt }}"
      when: ( alternatives_present is defined ) and ( alternatives_present != [] )
      notify: Update ansible_local

    - name: Alternatives absent from facts config file
      ansible.builtin.lineinfile:
        path: /etc/ansible/alternatives
        line: "{{ alt }}"
        state: absent
        create: true
        mode: "0600"
        owner: root
        group: root
      loop: "{{ alternatives_absent }}"
      loop_control:
        loop_var: alt
        label: "{{ alt }}"
      when: ( alternatives_absent is defined ) and ( alternatives_absent != [] )
      notify: Update ansible_local

    - name: Ansible facts.d directory present
      ansible.builtin.file:
        path: /etc/ansible/facts.d
        recurse: true
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Ansible alternatives local facts script present
      ansible.builtin.copy:
        src: update_alternatives.fact
        dest: /etc/ansible/facts.d/update_alternatives.fact
        mode: "0755"
        owner: root
        group: root
      notify: Update ansible_local

  tags:
    - alternatives
...
