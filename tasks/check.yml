# Copyright 2022-2024 Chris Croome
#
# This file is part of the Webarchitects Debian alternatives Ansible role.
#
# The Webarchitects Debian alternatives Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Debian alternatives Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Debian alternatives Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Check alternatives variables
  block:

    - name: Assume there is no --debug support
      ansible.builtin.set_fact:
        alternatives_debug: false

    - name: Check that we have updates-alternatives 1.15.0 or greater
      ansible.builtin.assert:
        that:
          - ansible_local.update_alternatives.version is version('1.15.0', '>=')
        quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"
      when: ansible_local.update_alternatives.version is defined

    - name: Set a fact to indicate there is --debug support when updates-alternatives 1.19.3 or greater
      ansible.builtin.set_fact:
        alternatives_debug: true
      when:
        - ansible_local.update_alternatives.version is defined
        - ansible_local.update_alternatives.version is version('1.19.3', '>=')

    - name: Check that alternatives and alternative_facts are booleans
      ansible.builtin.assert:
        that:
          - alternatives | type_debug == "bool"
          - alternative_facts | type_debug == "bool"
        quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"

    - name: Check alternatives_update list
      block:

        - name: Debug alternatives to update
          ansible.builtin.debug:
            var: alternatives_update
            verbosity: 2

        - name: Check that alternatives_update is a array
          ansible.builtin.assert:
            that:
              - alternatives_update | type_debug == "list"
            quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"

        - name: Include checks for the alternatives present if they don't match existing alternatives
          ansible.builtin.include_tasks: check_alternatives.yml
          when: >
            ( ansible_local.update_alternatives.selections[alt_update.name] is not defined ) or
            ( alt_update != ansible_local.update_alternatives.selections[alt_update.name] )
          loop: "{{ alternatives_update }}"
          loop_control:
            loop_var: alt_update
            label: "{{ alt_update }}"

      when: alternatives_update is defined

  tags:
    - alternatives
...
